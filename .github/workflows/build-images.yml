name: Build and Publish Images

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: scout-io/scout

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/scout-io/scout-backend:${{ steps.meta.outputs.version }}
            ${{ env.REGISTRY }}/scout-io/scout-backend:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/scout-io/scout-frontend:${{ steps.meta.outputs.version }}
            ${{ env.REGISTRY }}/scout-io/scout-frontend:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Wait for packages to be available
        run: sleep 30

      - name: Make packages public
        run: |
          # Retry making packages public with exponential backoff
          for i in {1..5}; do
            echo "Attempt $i to make packages public..."
            if curl -X PUT \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/orgs/scout-io/packages/container/scout-backend/visibility \
              -d '{"visibility":"public"}' 2>/dev/null; then
              echo "Successfully made scout-backend public"
              break
            else
              echo "Failed to make scout-backend public, attempt $i"
              sleep $((i * 10))
            fi
          done

          for i in {1..5}; do
            echo "Attempt $i to make packages public..."
            if curl -X PUT \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/orgs/scout-io/packages/container/scout-frontend/visibility \
              -d '{"visibility":"public"}' 2>/dev/null; then
              echo "Successfully made scout-frontend public"
              break
            else
              echo "Failed to make scout-frontend public, attempt $i"
              sleep $((i * 10))
            fi
          done
