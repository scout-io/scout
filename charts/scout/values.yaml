# Default values for Scout
# This is a YAML-formatted file.

# Global settings
global:
  environment: production
  imageRegistry: ""
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  # Default image repositories (used when imageRegistry is empty)
  defaultImageRegistry: "ghcr.io"

# Scout namespace configuration
namespace:
  create: true
  name: scout

# Image configuration
images:
  backend:
    repository: scout-io/scout-backend
    tag: latest
    pullPolicy: IfNotPresent
  frontend:
    repository: scout-io/scout-frontend
    tag: latest
    pullPolicy: IfNotPresent
  nginx:
    repository: nginx
    tag: alpine
    pullPolicy: IfNotPresent
  redis:
    repository: redis
    tag: alpine
    pullPolicy: IfNotPresent
  prometheus:
    repository: prom/prometheus
    tag: latest
    pullPolicy: IfNotPresent

# Backend configuration
backend:
  enabled: true
  replicas: 2
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  healthCheck:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
  config:
    host: "0.0.0.0"
    port: 8000
    debug: false
    redisEnabled: true
    disableDockerLogs: true

# Frontend configuration
frontend:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 70

# Nginx configuration
nginx:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 25m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    hosts:
      - host: scout.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
    # - secretName: scout-tls
    #   hosts:
    #     - scout.local

# Redis configuration
redis:
  enabled: true
  replicas: 1
  authEnabled: false
  password: ""
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi
  persistence:
    enabled: true
    storageClass: ""
    size: 1Gi
  config:
    host: "scout-redis"
    port: 6379
    contextTTL: 86400
    saveInterval: "60"
    saveChanges: "1"
    appendOnly: "yes"
    appendFsync: "everysec"

# Prometheus configuration
prometheus:
  enabled: true
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  persistence:
    enabled: true
    storageClass: ""
    size: 5Gi
  retention:
    time: "30d"
  config:
    scrapeInterval: 15s
    evaluationInterval: 15s

# Authentication and security
auth:
  protectedAPI: false
  token: ""
  tokenExpiration: 24
  # Generate token with: openssl rand -base64 32

# Service configuration
service:
  type: ClusterIP
  ports:
    backend: 8000
    frontend: 3000
    nginx: 80
    redis: 6379
    prometheus: 9090

# Pod security and RBAC
rbac:
  create: true
  minimalPermissions: true
  prometheus:
    create: true
    clusterRole: true

# Security configuration
security:
  # Network policies
  networkPolicy:
    enabled: false
    allowExternalAccess: true
  # Pod security standards
  podSecurity:
    enabled: true
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    dropAllCapabilities: true

# Network policies
networkPolicy:
  enabled: false
  allowExternalAccess: true
  ingress:
    enabled: false
  egress:
    enabled: false

# Resource quotas
resourceQuota:
  enabled: false
  limits:
    cpu: "4"
    memory: "8Gi"
    persistentvolumeclaims: "10"

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Horizontal Pod Autoscaler
hpa:
  backend:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  frontend:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 70

# Monitoring and metrics
monitoring:
  serviceMonitor:
    enabled: false
  grafana:
    enabled: false
  alerting:
    enabled: false

# Logging
logging:
  enabled: false
  fluentd:
    enabled: false
  elasticsearch:
    enabled: false

# Backup and restore
backup:
  enabled: false
  schedule: "0 2 * * *"
  retention: 7
  storage:
    enabled: false
    size: 10Gi

# Development and testing
dev:
  enabled: false
  debug: false
  hotReload: false
