{{- if .Values.prometheus.enabled }}
{{- if .Values.rbac.prometheus.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  namespace: {{ include "scout.namespace" . }}
  labels:
    {{- include "scout.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
---
{{- if .Values.rbac.prometheus.clusterRole }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "scout.fullname" . }}-prometheus
subjects:
- kind: ServiceAccount
  name: {{ include "scout.fullname" . }}-prometheus
  namespace: {{ include "scout.namespace" . }}
{{- end }}
{{- end }}
{{- if .Values.prometheus.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "scout.fullname" . }}-prometheus-data
  namespace: {{ include "scout.namespace" . }}
  labels:
    {{- include "scout.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.prometheus.persistence.storageClass }}
  storageClassName: {{ .Values.prometheus.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.prometheus.persistence.size }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  namespace: {{ include "scout.namespace" . }}
  labels:
    {{- include "scout.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  replicas: {{ .Values.prometheus.replicas }}
  selector:
    matchLabels:
      {{- include "scout.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        {{- include "scout.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
    spec:
      {{- if .Values.rbac.prometheus.create }}
      serviceAccountName: {{ include "scout.fullname" . }}-prometheus
      {{- end }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
      - name: prometheus
        image: {{ include "scout.image" (dict "repository" .Values.images.prometheus.repository "tag" .Values.images.prometheus.tag) }}
        imagePullPolicy: {{ .Values.images.prometheus.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.ports.prometheus }}
          name: http
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
        - '--storage.tsdb.retention.time={{ .Values.prometheus.retention.time }}'
        - '--web.enable-lifecycle'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        {{- if .Values.prometheus.persistence.enabled }}
        - name: prometheus-data
          mountPath: /prometheus
        {{- end }}
        resources:
          {{- toYaml .Values.prometheus.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: {{ .Values.service.ports.prometheus }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: {{ .Values.service.ports.prometheus }}
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: {{ include "scout.fullname" . }}-prometheus-config
      {{- if .Values.prometheus.persistence.enabled }}
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: {{ include "scout.fullname" . }}-prometheus-data
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "scout.prometheus.serviceName" . }}
  namespace: {{ include "scout.namespace" . }}
  labels:
    {{- include "scout.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  ports:
  - port: {{ .Values.service.ports.prometheus }}
    targetPort: {{ .Values.service.ports.prometheus }}
    name: http
  selector:
    {{- include "scout.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
{{- end }} 