{{- if .Values.prometheus.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: [nodes, nodes/proxy, services, endpoints, pods]
    verbs: ["get", "list", "watch"]
  - apiGroups: [extensions]
    resources: [ingresses]
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "scout.fullname" . }}-prometheus
subjects:
  - kind: ServiceAccount
    name: {{ include "scout.fullname" . }}-prometheus
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: {{ .Values.prometheus.persistence.size }}
  {{- if .Values.prometheus.persistence.storageClass }}
  storageClassName: {{ .Values.prometheus.persistence.storageClass }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'scout-backend'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names: [{{ .Release.Namespace }}]
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: [{{ .Release.Namespace }}]
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "scout.name" . }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "scout.name" . }}
        app.kubernetes.io/component: prometheus
    spec:
      serviceAccountName: {{ include "scout.fullname" . }}-prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
              name: http
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
            - '--storage.tsdb.retention.time=30d'
            - '--web.enable-lifecycle'
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus
          resources:
            {{- toYaml .Values.prometheus.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ include "scout.fullname" . }}-prometheus
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: {{ include "scout.fullname" . }}-prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "scout.fullname" . }}-prometheus
  labels:
    {{- include "scout.labels" . | nindent 4 }}
spec:
  ports:
    - port: 9090
      targetPort: 9090
      name: http
  selector:
    app.kubernetes.io/name: {{ include "scout.name" . }}
    app.kubernetes.io/component: prometheus
{{- end }}

